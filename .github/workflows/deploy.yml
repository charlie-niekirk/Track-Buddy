name: Android CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Generate App Bundle
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get Tag
      id: var
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Give gradlew permissions
      run: chmod +x gradlew
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    - name: Bundle 'release' with Gradle
      run: ./gradlew bundleRelease
    - name: Sign AAB
      id: sign_aab
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEYSTORE }}
        alias: ${{ secrets.SIGNING_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}  
    - run: echo "Build status report=${{ job.status }}."
    - name: Upload App Bundle
      uses: actions/upload-artifact@v1
      with:
        name: aab
        path: ${{steps.sign_aab.outputs.signedReleaseFile}}
    - name: Download AAB from build
      uses: actions/download-artifact@v1
      with:
         name: aab
    - name: Build Changelog
      id: changelog
      uses: ardalanamini/auto-changelog@v3
      with:
        mention-authors: false
        mention-new-contributors: false
        include-compare: false
        semver: false
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.changelog }} &#x20;
    - name: Upload Release AAB
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: aab/app-release.aab
        asset_name: ${{ github.event.repository.name }}.aab
        asset_content_type: application/zip
    - run: echo "Upload returned with status=${{ job.status }}."
